const gulp = require('gulp');
// const minifyCSS = require('gulp-csso');
// const uglify = require('gulp-uglify');
const babel = require('gulp-babel');
const sourcemaps = require('gulp-sourcemaps');
const pump = require('pump');

gulp.task('html', () => {
  return gulp.src('src/*.html')
    .pipe(gulp.dest('build'));
});

gulp.task('css', () => {
  return gulp.src('src/css/*.css')
  // post-report.css @media stuff cannot be minified (will throw error)
    // .pipe(minifyCSS())
    .pipe(gulp.dest('build/css'));
});

gulp.task('js', function (cb) {
  pump([
      gulp.src('src/js/*.js'),
      sourcemaps.init(),
      babel({ 'presets': ['env'] }),
      // do not use uglify now because source map will be broken (mapped to the one generated by babel)
      // uglify(),
      sourcemaps.write(),
      gulp.dest('build/js'),
    ],
    cb,
  );
});

gulp.task('lib', () => {
  return gulp.src('src/lib/*')
    .pipe(gulp.dest('build/lib'));
});

gulp.task('img', () => {
  return gulp.src('src/img/*')
    .pipe(gulp.dest('build/img'));
});

gulp.task('default', [
  'html',
  'css',
  'js',
  'lib',
  'img',
]);
